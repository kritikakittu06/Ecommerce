/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-04-26 08:59:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import models.ProductModel;

public final class AdminProducts_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("models.ProductModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>Product Management</title>\r\n");
      out.write("  <style>\r\n");
      out.write("    :root {\r\n");
      out.write("      --color-primary: cornflowerblue; /* #7380ec */\r\n");
      out.write("      --color-danger: coral; /* #ff7782 */\r\n");
      out.write("      --color-dark: midnightblue; /* #363949 */\r\n");
      out.write("      --color-background: gainsboro; /* #f6f6f9 */\r\n");
      out.write("      --color-white: white; /* #fff */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("      background-color: var(--color-background);\r\n");
      out.write("      color: var(--color-dark);\r\n");
      out.write("      font-family: Arial, sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("      max-width: 80%;\r\n");
      out.write("      margin: 20px auto;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      background-color: var(--color-white);\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    table {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      border-collapse: collapse;\r\n");
      out.write("      margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th, td {\r\n");
      out.write("      padding: 10px;\r\n");
      out.write("      border-bottom: 1px solid var(--color-background);\r\n");
      out.write("      vertical-align: middle;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th {\r\n");
      out.write("      background-color: var(--color-primary);\r\n");
      out.write("      color: var(--color-white);\r\n");
      out.write("      text-align: left;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    td {\r\n");
      out.write("      text-align: left;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-edit,\r\n");
      out.write("    .btn-delete {\r\n");
      out.write("      padding: 6px 12px;\r\n");
      out.write("      border: none;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-edit {\r\n");
      out.write("      background-color: var(--color-primary);\r\n");
      out.write("      color: var(--color-white);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-delete {\r\n");
      out.write("      background-color: var(--color-danger);\r\n");
      out.write("      color: var(--color-white);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    td,img{\r\n");
      out.write("        height: 100px;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <h2>Product Management</h2>\r\n");
      out.write("    ");
 
      List<ProductModel> products = (List<ProductModel>) request.getAttribute("products");
      if (products.isEmpty()) { 
      out.write("\r\n");
      out.write("        <p>No products have been added.</p>\r\n");
      out.write("      ");
 } else { 
      out.write("\r\n");
      out.write("        <table>\r\n");
      out.write("          <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("              <th>Product Image</th>\r\n");
      out.write("              <th>Name</th>\r\n");
      out.write("              <th>Description</th>\r\n");
      out.write("              <th>Price</th>\r\n");
      out.write("              <th>Print Speed</th> \r\n");
      out.write("              <th>Color</th>\r\n");
      out.write("              <th>Dimensions</th>\r\n");
      out.write("              <th>Actions</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </thead>\r\n");
      out.write("          <tbody>\r\n");
      out.write("            ");
 for (ProductModel product : products) { 
      out.write("\r\n");
      out.write("              <tr>\r\n");
      out.write("                <td><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/Uploads/ProductImages/");
      out.print( product.getProductImage() );
      out.write("\" alt=\"");
      out.print( product.getProductName() );
      out.write("\"></td>\r\n");
      out.write("                <td>");
      out.print( product.getProductName() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( product.getProductDescription() );
      out.write("</td>\r\n");
      out.write("                <td>NPR ");
      out.print( product.getPrice() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( product.getPrintSpeed() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( product.getPrintColor() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( product.getDimensions() );
      out.write("</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                  <button href=\"#\" class=\"btn-edit\">Edit</button>\r\n");
      out.write("                  <button href=\"#\" class=\"btn-delete\">Delete</button>\r\n");
      out.write("                </td>\r\n");
      out.write("              </tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("          </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
